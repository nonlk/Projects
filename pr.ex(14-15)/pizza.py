# -*- coding: utf-8 -*-
"""
Created on Thu Nov 25 13:00:26 2021

@author: HP
"""
import time

class pizza:
    """Класс Пицца содержит общие атрибуты для пиццы.

    Дочерние классы будут их конкретизировать.
    """

    def __init__(self):
        """Конструктор класса.

        Инициализирует атрибуты пиццы (значения по умолчанию).
        """
        self.name = "Заготовка"
        self.dough = "тонкое"  # тонкое или пышное
        self.sauce = "томатный"   # или другой
        self.topping = []      # список начинок (по умолчанию - нет)

        self.price = 0

    def __str__(self):
        """Вернуть информацию о пицце: название, тесто, соус, начинка.

        Формат вывода:

        Пицца: Пепперони | Цена: 350.00 р.
        Тесто: тонкое Соус: томатный
        Начинка: пепперони, сыр моцарелла
        """
        str_top = ", ".join(self.topping)
        return """Пицца: {} | Цена: {:.2f} p. 
   Тесто: {} Соус: {} 
   Начинка: {:s}""".format(self.name, self.price,
    self.dough, self.sauce,str_top)
        
         
         
    def prepare(self):
        """Сообщить о процессе подготовки.

        Формат вывода:

        Начинаю готовить пиццу Пепперони
          - замешиваю тонкое тесто...
          - добавляю соус: томатный...
          - и, конечно: пепперони, сыр моцарелла...
        """
        print("Начинаю готовить пиццу {}".format(self.name))
        time.sleep(1)
        print("    - замешиваю {} тесто...".format(self.dough))
        time.sleep(1)
        print("    - добавляю соус: {}...".format(self.sauce))
        time.sleep(1)
        print("    - и, конечно: %s" % ", ".join(self.topping))

    def bake(self):
        """Сообщить о процессе запекания пиццы.

        Формат вывода: произвольное сообщение.
        """
        print("Выпекаю пиццу... Готово!")

    def cut(self):
        """Сообщить о процессе нарезки.

        Формат вывода: произвольное сообщение.
        """
        print("Нарезаю на аппетитные кусочки...")

    def pack(self):
        """Сообщить о процессе упаковки.

        Формат вывода: произвольное сообщение.
        """
        print("Упаковываю в фирменную упаковку и готово!")


class Pepperoni(pizza):
    """Класс ПиццаПепперони дополняет класс Пицца."""

    def __init__(self):
        super().__init__()
        self.name = "Пепперони"
        self.topping = ["пепперони", "сыр моцарелла"]
        self.price = 350
        
    

class Barbecue(pizza):
    """Класс ПиццаБарбекю дополняет класс Пицца."""

    def __init__(self):
        super().__init__()
        self.name = "Барбекю"
        self.sauce = "барбекю"
        self.topping = ["бекон", "ветчина", "зелень", "сыр моцарелла"]
        self.price = 450
        
    

class SeaFood(pizza):
    """Класс ПиццаДарыМоря дополняет класс Пицца."""
   
    def __init__(self):
        super().__init__()
        self.name = "Дары Моря"
        self.dough = "пышное"
        self.sauce = "тар-тар"
        self.topping = ["кальмары", "креветки", "мидии", "сыр моцарелла"]
        self.price = 550


